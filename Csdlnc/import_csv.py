import psycopg2
import pandas as pd
from pymongo import MongoClient
import random
from datetime import datetime, timedelta

# K·∫øt n·ªëi t·ªõi PostgreSQL
conn = psycopg2.connect(
    dbname="traffic_db",
    user="postgres",
    password="123456",   # üîë ƒê·ªïi th√†nh m·∫≠t kh·∫©u th·∫≠t c·ªßa b·∫°n
    host="localhost",
    port="5432"
)

# T·∫°o b·∫£ng n·∫øu ch∆∞a c√≥
create_table_query = """
CREATE TABLE IF NOT EXISTS traffic_data (
    id SERIAL PRIMARY KEY,
    location VARCHAR(50),
    time TIMESTAMP,
    vehicle_count INT
);
"""

# Th·ª±c thi t·∫°o b·∫£ng
cursor = conn.cursor()
cursor.execute(create_table_query)

# X√≥a d·ªØ li·ªáu c≈© trong PostgreSQL tr∆∞·ªõc khi ch√®n d·ªØ li·ªáu m·ªõi
cursor.execute("DELETE FROM traffic_data")
conn.commit()  # ƒê·∫£m b·∫£o thay ƒë·ªïi ƒë∆∞·ª£c commit v√†o c∆° s·ªü d·ªØ li·ªáu


# T·∫°o danh s√°ch ƒë·ªãa ƒëi·ªÉm m·∫´u
locations = [f"Location_{i}" for i in range(1, 10001)]

#! T·∫°o d·ªØ li·ªáu gi·∫£ l·∫≠p 10000 
data = []
start_time = datetime(2025, 4, 15, 7, 0)

for location in locations:
    time = start_time  # Ch·ªâ t·∫°o d·ªØ li·ªáu cho 1 gi·ªù
    vehicle_count = random.randint(50, 300)  # S·ªë l∆∞·ª£ng xe ng·∫´u nhi√™n t·ª´ 50 ƒë·∫øn 300
    data.append([location, time.strftime("%Y-%m-%d %H:%M"), vehicle_count])

# Chuy·ªÉn th√†nh DataFrame
df = pd.DataFrame(data, columns=["location", "time", "vehicle_count"])

# Ghi d·ªØ li·ªáu v√†o file CSV
df.to_csv("traffic_data.csv", index=False)
# # ƒê·ªçc CSV
# df = pd.read_csv("traffic_data.csv")

# Ghi t·ª´ng d√≤ng v√†o b·∫£ng PostgreSQL
for _, row in df.iterrows():
    cursor.execute(
        "INSERT INTO traffic_data (location, time, vehicle_count) VALUES (%s, %s, %s)",
        (row['location'], row['time'], int(row['vehicle_count']))
    )

# Commit v√†o PostgreSQL
conn.commit()

# K·∫øt n·ªëi ƒë·∫øn MongoDB
client = MongoClient("mongodb://localhost:27017/")
db = client["traffic_db"]  # T√™n database MongoDB
collection = db["traffic_data"]  # T√™n collection MongoDB

# X√≥a d·ªØ li·ªáu c≈© trong MongoDB
collection.delete_many({})

# Chuy·ªÉn ƒë·ªïi DataFrame th√†nh list of dictionaries ƒë·ªÉ import v√†o MongoDB
data = df.to_dict(orient="records")

# Ch√®n d·ªØ li·ªáu v√†o MongoDB
collection.insert_many(data)

# ƒê√≥ng k·∫øt n·ªëi
cursor.close()
conn.close()
client.close()

print("‚úÖ D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c import th√†nh c√¥ng v√†o PostgreSQL v√† MongoDB.")
